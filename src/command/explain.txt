命令模式：
将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可撤销的操作。

对某个对象根据请求不同的操作，此对象相当于一个实际处理者，
请求的传递由接收者接收具体的命令，最终传递给他。

代码以简易的数据存储为例，在此假设
service层为请求的接收者，客户端请求由控制层接收理解为发起者，dao层与数据库连接并执行crud操作解释为实际执行者。

优点：
具体实现类与操作类解耦，不直接关联，中介的方式记录客户端的请求，把实现类的具体操作抽象解耦为多个实现。
并且通过中介管理者可以对其进行crud操作。

敏捷开发：
不要为代码添加基于猜测的、实际不需要的功能，如果不清楚一个系统是否需要命令模式，一般就不要着急实现它。
只要在真正需要的时候再进行代码重构，这也就是重构的体现，另外显示出设计模式的重要性。

